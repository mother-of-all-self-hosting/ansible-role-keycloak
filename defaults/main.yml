# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

# Project source code URL: https://github.com/keycloak/keycloak

keycloak_enabled: true

keycloak_identifier: keycloak
keycloak_base_path: "/{{ keycloak_identifier }}"

keycloak_version: 26.1.3

keycloak_uid: ''
keycloak_gid: ''

# The hostname at which keycloak is served.
keycloak_hostname: ''

keycloak_scheme: https

# The path at which keycloak is served.
# This value must either be `/` or not end with a slash (e.g. `/keycloak`).
keycloak_path_prefix: /

keycloak_container_image: "{{ keycloak_container_image_registry_prefix }}keycloak/keycloak:{{ keycloak_container_image_tag }}"
keycloak_container_image_tag: "{{ keycloak_version }}"
keycloak_container_image_registry_prefix: "{{ keycloak_container_image_registry_prefix_upstream }}"
keycloak_container_image_registry_prefix_upstream: "{{ keycloak_container_image_registry_prefix_upstream_default }}"
keycloak_container_image_registry_prefix_upstream_default: quay.io/
keycloak_container_image_force_pull: "{{ keycloak_container_image.endswith(':latest') }}"

# Specifies how the container publishes its HTTP port
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:8080"), just a port number or an empty string to not expose.
keycloak_container_http_bind_port: ''

# The base container network. It will be auto-created by this role if it doesn't exist already.
keycloak_container_network: "{{ keycloak_identifier }}"

# The port number in the container
keycloak_container_http_port: 8080

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
keycloak_container_additional_networks: "{{ keycloak_container_additional_networks_auto + keycloak_container_additional_networks_custom }}"
keycloak_container_additional_networks_auto: []
keycloak_container_additional_networks_custom: []

# keycloak_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `keycloak_container_labels_additional_labels`.
keycloak_container_labels_traefik_enabled: true
keycloak_container_labels_traefik_docker_network: "{{ keycloak_container_network }}"
keycloak_container_labels_traefik_hostname: "{{ keycloak_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/keycloak`).
keycloak_container_labels_traefik_path_prefix: "{{ keycloak_path_prefix }}"
# TODO - /admin and various other paths had better not be reverse-proxied or be protected with another mechanism (e.g. HTTP Basic Auth).
# See: https://www.keycloak.org/server/reverseproxy#_exposed_path_recommendations
# We should separate the rules into public and admin, metrics, etc.
keycloak_container_labels_traefik_rule: "Host(`{{ keycloak_container_labels_traefik_hostname }}`){% if keycloak_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ keycloak_container_labels_traefik_path_prefix }}`){% endif %}"
keycloak_container_labels_traefik_priority: 0
keycloak_container_labels_traefik_entrypoints: web-secure
keycloak_container_labels_traefik_tls: "{{ keycloak_container_labels_traefik_entrypoints != 'web' }}"
keycloak_container_labels_traefik_tls_certResolver: default  # noqa var-naming
# Controls whether the default /metrics path should be redirected elsewhere.
# This is useful to enable when exposing the metrics elsewhere (e.g. /metrics/keycloak) and potentially behind Basic Auth there,
# so that metrics are not also served at the original /metrics path unprotected.
keycloak_container_labels_middleware_metrics_redirection_enabled: "{{ keycloak_container_labels_metrics_enabled and keycloak_container_labels_metrics_path_prefix != keycloak_container_labels_middleware_metrics_redirection_default_path }}"
keycloak_container_labels_middleware_metrics_redirection_default_path: "{{ '' if keycloak_path_prefix == '/' else keycloak_path_prefix }}/metrics"
keycloak_container_labels_middleware_metrics_redirection_target_path: "{{ keycloak_container_labels_metrics_path_prefix }}"

# Controls whether the metrics-handling endpoint is enabled.
#
# If metrics are enabled (`keycloak_environment_variable_kc_metrics_enabled`), by default Keycloak would serve them at `/metrics`.
# We add an explicit router for handling metrics, so we can get more control.
# The playbook may even decide to expose metrics at a different URL (e.g. /metrics/keycloak) and reconfigure this.
#
# If we're handling metrics at a custom path (other than `{prefix}/metrics`) and potentially basic-auth-protecting them,
# then we should consider blocking out access to the default metrics path, so that it doesn't serve metrics unauthenticated.
keycloak_container_labels_metrics_enabled: "{{ keycloak_environment_variable_kc_metrics_enabled }}"
keycloak_container_labels_metrics_hostname: "{{ keycloak_container_labels_traefik_hostname }}"
keycloak_container_labels_metrics_path_prefix: "{{ '' if keycloak_path_prefix == '/' else keycloak_path_prefix }}/metrics"
keycloak_container_labels_metrics_traefik_rule: "Host(`{{ keycloak_container_labels_metrics_hostname }}`) && PathPrefix(`{{ keycloak_container_labels_metrics_path_prefix }}`)"
keycloak_container_labels_metrics_traefik_priority: 0
keycloak_container_labels_metrics_traefik_entrypoints: web-secure
keycloak_container_labels_metrics_traefik_tls: "{{ keycloak_container_labels_traefik_entrypoints != 'web' }}"
keycloak_container_labels_metrics_traefik_tls_certResolver: default  # noqa var-naming
keycloak_container_labels_metrics_middleware_basic_auth_enabled: false
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/#users
keycloak_container_labels_metrics_middleware_basic_auth_users: ''

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `keycloak_container_labels_traefik_additional_response_headers_custom`
keycloak_container_labels_traefik_additional_request_headers: "{{ keycloak_container_labels_traefik_additional_request_headers_auto | combine(keycloak_container_labels_traefik_additional_request_headers_custom) }}"
keycloak_container_labels_traefik_additional_request_headers_auto: {}
keycloak_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `keycloak_container_labels_traefik_additional_response_headers_custom`
keycloak_container_labels_traefik_additional_response_headers: "{{ keycloak_container_labels_traefik_additional_response_headers_auto | combine(keycloak_container_labels_traefik_additional_response_headers_custom) }}"
# Intentionally not adding other headers here (X-Frame-Options, X-XSS-Protection, Content-Security-Policy, etc),
# because Keycloak does it itself, with different settings applying to different realms
# (see Keycloak admin panel -> Realm Settings -> Security defenses).
keycloak_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'Permission-Policy': keycloak_http_header_content_permission_policy} if keycloak_http_header_content_permission_policy else {})
  }}
keycloak_container_labels_traefik_additional_response_headers_custom: {}

# keycloak_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# keycloak_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
keycloak_container_labels_additional_labels: ''

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
keycloak_container_additional_volumes: []

# A list of extra arguments to pass to the container
keycloak_container_extra_arguments: []

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
keycloak_http_header_content_permission_policy: "{{ 'interest-cohort=()' if keycloak_floc_optout_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `keycloak_content_permission_policy`
keycloak_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `keycloak_http_header_strict_transport_security`
keycloak_hsts_preload_enabled: false

# List of systemd services that keycloak.service depends on
keycloak_systemd_required_services_list: "{{ keycloak_systemd_required_systemd_services_list_default + keycloak_systemd_required_systemd_services_list_auto + keycloak_systemd_required_systemd_services_list_custom }}"
keycloak_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
keycloak_systemd_required_services_list_auto: []
keycloak_systemd_required_services_list_custom: []

# The command to run in the container.
# By default, we start a production server.
keycloak_container_command: start

# Command arguments added to the command (keycloak_container_command)
keycloak_container_command_arguments: "{{ keycloak_container_command_arguments_auto + keycloak_container_command_arguments_custom }}"
keycloak_container_command_arguments_auto: |
  {{
    (
      [
        '--spi-theme-static-max-age=-1',
        '--spi-theme-cache-themes=false',
        '--spi-theme-cache-templates=false',
      ] if keycloak_theme_development_mode_enabled else []
    )
  }}
keycloak_container_command_arguments_custom: []

# Controls the `KC_DB` environment variable
keycloak_environment_variable_kc_db: "{{ keycloak_database_type }}"
# Controls the `KC_DB_USERNAME` environment variable
keycloak_environment_variable_kc_db_username: "{{ keycloak_database_username }}"
# Controls the `KC_DB_PASSWORD` environment variable
keycloak_environment_variable_kc_db_password: "{{ keycloak_database_password }}"
# Controls the `KC_DB_URL_HOST` environment variable
keycloak_environment_variable_kc_db_url_host: "{{ keycloak_database_hostname }}"
# Controls the `KC_DB_URL_PORT` environment variable
keycloak_environment_variable_kc_db_url_port: "{{ keycloak_database_port }}"
# Controls the `KC_DB_URL_DATABASE` environment variable
keycloak_environment_variable_kc_db_url_database: "{{ keycloak_database_name }}"

# Controls the `KC_HOSTNAME_STRICT` environment variable
keycloak_environment_variable_kc_hostname_strict: false

# Controls the `KC_HOSTNAME_URL` environment variable
keycloak_environment_variable_kc_hostname_url: "{{ keycloak_scheme }}://{{ keycloak_hostname }}{{ keycloak_path_prefix }}"

# Controls the `KC_HTTP_ENABLED` environment variable.
# In production mode, when this is disabled and KC_PROXY=none, only an HTTPS server is started (which requires keys, etc).
# To use this behind a reverse-proxy:
# - either start a dev server, not a production server (see `keycloak_container_command`)
# - or, keep running a production server and enable this
# - or, keep running a production server and set KC_PROXY to true (see `keycloak_environment_variable_kc_proxy`)
# See: https://www.keycloak.org/docs/24.0.0/upgrading/#deprecated-proxy-option
keycloak_environment_variable_kc_http_enabled: "{{ true if keycloak_container_labels_traefik_enabled else false }}"

# Controls the `KC_HTTP_RELATIVE_PATH` environment variable.
keycloak_environment_variable_kc_http_relative_path: "{{ keycloak_path_prefix }}"

# Controls the `KC_HEALTH_ENABLED` environment variable.
keycloak_environment_variable_kc_health_enabled: false

# Controls the `KC_METRICS_ENABLED` environment variable.
keycloak_environment_variable_kc_metrics_enabled: false

# Controls the `KC_PROXY_HEADERS` environment variable.
# See: https://www.keycloak.org/docs/24.0.0/upgrading/#deprecated-proxy-option
keycloak_environment_variable_kc_proxy_headers: "{{ 'xforwarded' if keycloak_container_labels_traefik_enabled else '' }}"

# Defines the root logger's level. By default, all other (category-specific) loggers inherit this level.
#
# See:
# - keycloak_environment_variable_kc_log_level
# - keycloak_environment_variable_kc_log_level_category_specific_list
#
# Valid logging levels are: fatal, error, warn, info, debug, trace, all, off
keycloak_environment_variable_kc_log_level_root: info

# Controls the `KC_LOG_LEVEL` environment variable.
#
# This environment variable controls the log level used by the root logger (specified in `keycloak_environment_variable_kc_log_level_root`),
# which all loggers inherit, but may also be used for defining log levels for additional logging categories.
keycloak_environment_variable_kc_log_level: |-
  {{
    (
      [keycloak_environment_variable_kc_log_level_root]
      +
      keycloak_environment_variable_kc_log_level_category_specific_list
    ) | join(',')
  }}

# Controls the category-specific log levels.
# Unless explicitly defined, category-specific loggers inherit the root-logger's level (`keycloak_environment_variable_kc_log_level_root`).
#
# We set `org.keycloak.events` to `debug` by default, because interesting events related to authentication
# (`LOGIN`, `CODE_TO_TOKEN`, `USER_INFO_REQUEST`, `LOGOUT` and potentially others) are logged at a `debug` level.
# See:
# - https://www.youtube.com/watch?v=Rh8LstBPBOE
# - https://www.n-k.de/2020/12/keycloak-events-logging.html
# - https://www.keycloak.org/server/logging#_configuring_category_specific_log_levels
keycloak_environment_variable_kc_log_level_category_specific: "{{ keycloak_environment_variable_kc_log_level_category_specific_default | combine(keycloak_environment_variable_kc_log_level_category_specific_auto) | combine(keycloak_environment_variable_kc_log_level_category_specific_custom) }}"
keycloak_environment_variable_kc_log_level_category_specific_default:
  org.keycloak.events: debug
keycloak_environment_variable_kc_log_level_category_specific_auto: {}
keycloak_environment_variable_kc_log_level_category_specific_custom: {}

# Controls the `KEYCLOAK_ADMIN` environment variable.
# If specified, Keycloak will attempt to register the user on startup.
# If the user already exists, it will report an error but will continue running.
keycloak_environment_variable_keycloak_admin: ''
# Controls the `KEYCLOAK_ADMIN_PASSWORD` environment variable.
# Subsequent changes to the password will not affect the already-registered user (if any).
keycloak_environment_variable_keycloak_admin_password: ''

# Controls if various command line flags are passed to Keycloak to make it not cache themes.
# See: keycloak_container_command_arguments_auto
# See: https://www.keycloak.org/docs/latest/server_development/#creating-a-theme
# The same can also be done by changing using the `start-dev` command (see `keycloak_container_command`), even without passing any flags to it.
keycloak_theme_development_mode_enabled: false

keycloak_database_type: postgres
keycloak_database_hostname: ''
keycloak_database_port: 5432
keycloak_database_name: keycloak
keycloak_database_username: keycloak
keycloak_database_password: ''

# Additional environment variables.
keycloak_environment_variables_additional_variables: ''
